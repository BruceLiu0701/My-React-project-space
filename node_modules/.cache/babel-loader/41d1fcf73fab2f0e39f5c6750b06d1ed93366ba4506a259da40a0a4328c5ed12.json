{"ast":null,"code":"\"use client\";\n\nimport * as React from \"react\";\nimport classNames from \"classnames\";\nimport { blue } from \"@ant-design/colors\";\nimport Context from \"./Context\";\nimport ReactIcon from \"./IconBase\";\nimport { getTwoToneColor, setTwoToneColor } from \"./twoTonePrimaryColor\";\nimport { normalizeTwoToneColors } from \"../utils\";\n// Initial setting\n// should move it to antd main repo?\nsetTwoToneColor(blue.primary);\nconst Icon = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // affect outter <i>...</i>\n    className,\n    // affect inner <svg>...</svg>\n    icon,\n    spin,\n    rotate,\n    tabIndex,\n    onClick,\n    // other\n    twoToneColor,\n    ...restProps\n  } = props;\n  const {\n    prefixCls = \"anticon\",\n    rootClassName\n  } = React.useContext(Context);\n  const classString = classNames(rootClassName, prefixCls, {\n    [`${prefixCls}-${icon.name}`]: !!icon.name,\n    [`${prefixCls}-spin`]: !!spin || icon.name === \"loading\"\n  }, className);\n  let iconTabIndex = tabIndex;\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n  }\n  const svgStyle = rotate ? {\n    msTransform: `rotate(${rotate}deg)`,\n    transform: `rotate(${rotate}deg)`\n  } : undefined;\n  const [primaryColor, secondaryColor] = normalizeTwoToneColors(twoToneColor);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": icon.name,\n    ...restProps,\n    ref: ref,\n    tabIndex: iconTabIndex,\n    onClick: onClick,\n    className: classString\n  }, /*#__PURE__*/React.createElement(ReactIcon, {\n    icon: icon,\n    primaryColor: primaryColor,\n    secondaryColor: secondaryColor,\n    style: svgStyle\n  }));\n});\nIcon.displayName = \"AntdIcon\";\nIcon.getTwoToneColor = getTwoToneColor;\nIcon.setTwoToneColor = setTwoToneColor;\nexport default Icon;","map":{"version":3,"names":["React","classNames","blue","Context","ReactIcon","getTwoToneColor","setTwoToneColor","normalizeTwoToneColors","primary","Icon","forwardRef","props","ref","className","icon","spin","rotate","tabIndex","onClick","twoToneColor","restProps","prefixCls","rootClassName","useContext","classString","name","iconTabIndex","undefined","svgStyle","msTransform","transform","primaryColor","secondaryColor","createElement","role","style","displayName"],"sources":["C:/Users/88697/Desktop/react project/get_hired_project/node_modules/@ant-design/icons/es/components/AntdIcon.js"],"sourcesContent":["\"use client\";\nimport * as React from \"react\";\nimport classNames from \"classnames\";\nimport { blue } from \"@ant-design/colors\";\nimport Context from \"./Context\";\nimport ReactIcon from \"./IconBase\";\nimport { getTwoToneColor, setTwoToneColor } from \"./twoTonePrimaryColor\";\nimport { normalizeTwoToneColors } from \"../utils\";\n// Initial setting\n// should move it to antd main repo?\nsetTwoToneColor(blue.primary);\nconst Icon = /*#__PURE__*/ React.forwardRef((props, ref)=>{\n    const { // affect outter <i>...</i>\n    className, // affect inner <svg>...</svg>\n    icon, spin, rotate, tabIndex, onClick, // other\n    twoToneColor, ...restProps } = props;\n    const { prefixCls = \"anticon\", rootClassName } = React.useContext(Context);\n    const classString = classNames(rootClassName, prefixCls, {\n        [`${prefixCls}-${icon.name}`]: !!icon.name,\n        [`${prefixCls}-spin`]: !!spin || icon.name === \"loading\"\n    }, className);\n    let iconTabIndex = tabIndex;\n    if (iconTabIndex === undefined && onClick) {\n        iconTabIndex = -1;\n    }\n    const svgStyle = rotate ? {\n        msTransform: `rotate(${rotate}deg)`,\n        transform: `rotate(${rotate}deg)`\n    } : undefined;\n    const [primaryColor, secondaryColor] = normalizeTwoToneColors(twoToneColor);\n    return /*#__PURE__*/ React.createElement(\"span\", {\n        role: \"img\",\n        \"aria-label\": icon.name,\n        ...restProps,\n        ref: ref,\n        tabIndex: iconTabIndex,\n        onClick: onClick,\n        className: classString\n    }, /*#__PURE__*/ React.createElement(ReactIcon, {\n        icon: icon,\n        primaryColor: primaryColor,\n        secondaryColor: secondaryColor,\n        style: svgStyle\n    }));\n});\nIcon.displayName = \"AntdIcon\";\nIcon.getTwoToneColor = getTwoToneColor;\nIcon.setTwoToneColor = setTwoToneColor;\nexport default Icon;\n"],"mappings":"AAAA,YAAY;;AACZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,IAAI,QAAQ,oBAAoB;AACzC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,eAAe,EAAEC,eAAe,QAAQ,uBAAuB;AACxE,SAASC,sBAAsB,QAAQ,UAAU;AACjD;AACA;AACAD,eAAe,CAACJ,IAAI,CAACM,OAAO,CAAC;AAC7B,MAAMC,IAAI,GAAG,aAAcT,KAAK,CAACU,UAAU,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAG;EACtD,MAAM;IAAE;IACRC,SAAS;IAAE;IACXC,IAAI;IAAEC,IAAI;IAAEC,MAAM;IAAEC,QAAQ;IAAEC,OAAO;IAAE;IACvCC,YAAY;IAAE,GAAGC;EAAU,CAAC,GAAGT,KAAK;EACpC,MAAM;IAAEU,SAAS,GAAG,SAAS;IAAEC;EAAc,CAAC,GAAGtB,KAAK,CAACuB,UAAU,CAACpB,OAAO,CAAC;EAC1E,MAAMqB,WAAW,GAAGvB,UAAU,CAACqB,aAAa,EAAED,SAAS,EAAE;IACrD,CAAE,GAAEA,SAAU,IAAGP,IAAI,CAACW,IAAK,EAAC,GAAG,CAAC,CAACX,IAAI,CAACW,IAAI;IAC1C,CAAE,GAAEJ,SAAU,OAAM,GAAG,CAAC,CAACN,IAAI,IAAID,IAAI,CAACW,IAAI,KAAK;EACnD,CAAC,EAAEZ,SAAS,CAAC;EACb,IAAIa,YAAY,GAAGT,QAAQ;EAC3B,IAAIS,YAAY,KAAKC,SAAS,IAAIT,OAAO,EAAE;IACvCQ,YAAY,GAAG,CAAC,CAAC;EACrB;EACA,MAAME,QAAQ,GAAGZ,MAAM,GAAG;IACtBa,WAAW,EAAG,UAASb,MAAO,MAAK;IACnCc,SAAS,EAAG,UAASd,MAAO;EAChC,CAAC,GAAGW,SAAS;EACb,MAAM,CAACI,YAAY,EAAEC,cAAc,CAAC,GAAGzB,sBAAsB,CAACY,YAAY,CAAC;EAC3E,OAAO,aAAcnB,KAAK,CAACiC,aAAa,CAAC,MAAM,EAAE;IAC7CC,IAAI,EAAE,KAAK;IACX,YAAY,EAAEpB,IAAI,CAACW,IAAI;IACvB,GAAGL,SAAS;IACZR,GAAG,EAAEA,GAAG;IACRK,QAAQ,EAAES,YAAY;IACtBR,OAAO,EAAEA,OAAO;IAChBL,SAAS,EAAEW;EACf,CAAC,EAAE,aAAcxB,KAAK,CAACiC,aAAa,CAAC7B,SAAS,EAAE;IAC5CU,IAAI,EAAEA,IAAI;IACViB,YAAY,EAAEA,YAAY;IAC1BC,cAAc,EAAEA,cAAc;IAC9BG,KAAK,EAAEP;EACX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AACFnB,IAAI,CAAC2B,WAAW,GAAG,UAAU;AAC7B3B,IAAI,CAACJ,eAAe,GAAGA,eAAe;AACtCI,IAAI,CAACH,eAAe,GAAGA,eAAe;AACtC,eAAeG,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}